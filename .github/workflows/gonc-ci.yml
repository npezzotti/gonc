name: Go-nc CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Match semantic version tags like v1.0.0, v2.1.3-beta, v1.2.3, etc.

  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint & Vet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.64
          args: --verbose
          
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: make tidy

      - name: Run tests
        run: make test

  build:
    name: Build & Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Install dependencies
        run: make tidy

      - name: Build binaries
        run: VERSION=${{ github.ref_name }} make release

      - name: Generate Changelog
        run: |
          GIT_CHGLOG_VERSION=0.15.4
          curl -o git-chglog -L "https://github.com/git-chglog/git-chglog/releases/download/${GIT_CHGLOG_VERSION}/git-chglog_linux_amd64"
          chmod +x git-chglog
          ./git-chglog -o ${{ github.workspace }}-CHANGELOG.md
          rm git-chglog

      - name: Commit Changelog
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ github.workspace }}-CHANGELOG.md
          git commit -m "chore: update changelog"
          git push

      - name: Create GitHub Release and Upload Archives
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./bin/*.tar.gz
            ./bin/*.zip
          generate_release_notes: true
          body: ${{ github.workspace }}-CHANGELOG.md
